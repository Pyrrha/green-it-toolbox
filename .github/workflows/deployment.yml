name: Deployment

# Triggers action
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build-front-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Build the Docker image
      run: cd front/ && docker build . --tag ${{ secrets.DOCKER_USER }}/pfa-front:latest --tag ${{ secrets.DOCKER_USER }}/pfa-front:$(date "+%Y-%m-%dT%H-%M-%SZ")

    - name: Push the Docker image
      run: docker push ${{ secrets.DOCKER_USER }}/pfa-front -a

  build-back-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Build the Docker image
      run: cd back/ && docker build . --tag ${{ secrets.DOCKER_USER }}/pfa-back:latest --tag ${{ secrets.DOCKER_USER }}/pfa-back:$(date "+%Y-%m-%dT%H-%M-%SZ")

    - name: Push the Docker image
      run: docker push ${{ secrets.DOCKER_USER }}/pfa-back -a

  deploy-staging:
    needs:
      - build-front-image
      - build-back-image

    runs-on: ubuntu-latest

    steps:
      # Check-out repository
      - uses: actions/checkout@v2
      
      # Deploy docker-compose file
      - name: Deploy docker-compose file
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_TARGET }}/pfa.yml
          SOURCE: "docker-compose.yml"

      # Apply docker-compose configuration
      - name: Apply docker-compose configuration
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: cd ${{ secrets.REMOTE_TARGET }} && docker stack deploy -c <(docker-compose -f pfa.yml config) pfa
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          privateKey: ${{ secrets.SERVER_SSH_KEY }}

